2021-11-21 07:22:20 info: ---------------------------------------
2021-11-21 07:22:20 info: >>> Running Unit Test `ex1-johnWho` <<<
2021-11-21 07:22:20 info: ---------------------------------------
2021-11-21 07:22:29 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    √ should exist and be executable (4 ms)
    × should have all TODO comments removed (15 ms)
    √ should call `new Promise()` (1 ms)
    × should take a single argument (2 ms)
    √ `resolve()` should be called with a one argument (1 ms)
    √ `reject()` should be called with a one argument
    √ should resolve when called with a string argument (1002 ms)
    √ should reject with an Error object when called without an argument (1001 ms)

  ● getAnonName › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      113 |
      114 | function checkTodos(source) {
    > 115 |   expect(source.includes('TODO')).toBeFalsy();
          |                                   ^
      116 | }
      117 |
      118 | module.exports = {

      at checkTodos (test-runner/unit-test-helpers.js:115:35)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:48:55)

  ● getAnonName › should take a single argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 2

      53 |
      54 |   test('should take a single argument', () => {
    > 55 |     expect(state.paramCount).toBe(1);
         |                              ^
      56 |   });
      57 |
      58 |   test('`resolve()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:55:30)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 6 passed, 8 total
Snapshots:   0 total
Time:        5.672 s
Ran all test suites matching /ex1-johnWho.test.js/i.

2021-11-21 07:22:32 error: *** Spell Checker Report ***


2021-11-21 07:22:36 info: Disclaimer turned off
2021-11-21 07:24:09 info: ---------------------------------------
2021-11-21 07:24:09 info: >>> Running Unit Test `ex1-johnWho` <<<
2021-11-21 07:24:09 info: ---------------------------------------
2021-11-21 07:24:17 info: All unit tests passed.
2021-11-21 07:24:20 error: *** Spell Checker Report ***


2021-11-21 07:25:39 info: ---------------------------------------
2021-11-21 07:25:39 info: >>> Running Unit Test `ex1-johnWho` <<<
2021-11-21 07:25:39 info: ---------------------------------------
2021-11-21 07:25:47 info: All unit tests passed.
2021-11-21 07:25:49 error: *** Spell Checker Report ***


2021-11-21 07:33:59 info: -------------------------------------------------
2021-11-21 07:33:59 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2021-11-21 07:33:59 info: -------------------------------------------------
2021-11-21 07:34:06 error: *** Unit Test Error Report ***

  console.log
    This is a double digit number!

      at 3-UsingAPIs/Week1/homework/ex2-checkDoubleDigits.js:29:30

  console.log
    Expected a double digit number but got 5

      at 3-UsingAPIs/Week1/homework/ex2-checkDoubleDigits.js:34:29

  console.log
    Expected a double digit number but got 123

      at 3-UsingAPIs/Week1/homework/ex2-checkDoubleDigits.js:38:29


2021-11-21 07:34:09 error: *** Spell Checker Report ***


2021-11-21 07:35:36 info: -------------------------------------------------
2021-11-21 07:35:36 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2021-11-21 07:35:36 info: -------------------------------------------------
2021-11-21 07:35:41 error: *** Unit Test Error Report ***

  console.log
    This is a double digit number!

      at 3-UsingAPIs/Week1/homework/ex2-checkDoubleDigits.js:29:30

  console.log
    Expected a double digit number but got 5

      at 3-UsingAPIs/Week1/homework/ex2-checkDoubleDigits.js:34:29

  console.log
    Expected a double digit number but got 123

      at 3-UsingAPIs/Week1/homework/ex2-checkDoubleDigits.js:38:29


2021-11-21 07:35:44 error: *** Spell Checker Report ***


2021-11-21 11:11:57 info: --------------------------------------------
2021-11-21 11:11:57 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2021-11-21 11:11:57 info: --------------------------------------------
2021-11-21 11:12:04 error: *** Unit Test Error Report ***

  console.log
    Rejected! undefined is not iterable (cannot read property Symbol(Symbol.iterator))

      at 3-UsingAPIs/Week1/homework/ex4-pokerDiceAll.js:41:29


2021-11-21 11:12:08 error: *** Spell Checker Report ***


2021-11-21 11:13:15 info: --------------------------------------------
2021-11-21 11:13:15 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2021-11-21 11:13:15 info: --------------------------------------------
2021-11-21 11:13:21 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
(node:7872) UnhandledPromiseRejectionWarning: Error: Dice 1 rolled off the table.

(Use `node --trace-warnings ...` to show where the warning was created)
(node:7872) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 2)
(node:7872) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
(node:7872) UnhandledPromiseRejectionWarning: Error: Dice 2 rolled off the table.

(node:7872) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 3)
(node:7872) UnhandledPromiseRejectionWarning: Error: Dice 3 rolled off the table.

(node:7872) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 4)
(node:7872) UnhandledPromiseRejectionWarning: Error: Dice 4 rolled off the table.

(node:7872) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 5)
(node:7872) UnhandledPromiseRejectionWarning: Error: Dice 5 rolled off the table.

(node:7872) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 6)
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (2 ms)
    × should have all TODO comments removed (15 ms)
    √ should use `dices.map()`
    √ should use `Promise.all()` (1 ms)
    × should resolve when all dices settle successfully (4 ms)
    √ should reject with an Error when a dice rolls off the table (38 ms)

  ● ex4-pokerDiceAll › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      113 |
      114 | function checkTodos(source) {
    > 115 |   expect(source.includes('TODO')).toBeFalsy();
          |                                   ^
      116 | }
      117 |
      118 | module.exports = {

      at checkTodos (test-runner/unit-test-helpers.js:115:35)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:36:55)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise
    Received constructor: Array

      55 |
      56 |     const promise = rollTheDices();
    > 57 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      58 |     const result = await promise;
      59 |     expect(Array.isArray(result)).toBe(true);
      60 |     expect(result).toHaveLength(5);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:57:21)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received two assertion calls.

      45 |
      46 |   test('should resolve when all dices settle successfully', async () => {
    > 47 |     expect.assertions(4);
         |            ^
      48 |     expect(exported).toBeDefined();
      49 |
      50 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:47:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 4 passed, 6 total
Snapshots:   0 total
Time:        2.955 s, estimated 3 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.

2021-11-21 11:13:24 error: *** Spell Checker Report ***


2021-11-21 11:15:36 info: --------------------------------------------
2021-11-21 11:15:36 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2021-11-21 11:15:36 info: --------------------------------------------
2021-11-21 11:15:41 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
(node:17160) UnhandledPromiseRejectionWarning: Error: Dice 1 rolled off the table.

(Use `node --trace-warnings ...` to show where the warning was created)
(node:17160) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 2)
(node:17160) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
(node:17160) UnhandledPromiseRejectionWarning: Error: Dice 1 rolled off the table.

(node:17160) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 3)
(node:17160) UnhandledPromiseRejectionWarning: Error: Dice 1 rolled off the table.

(node:17160) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 4)
(node:17160) UnhandledPromiseRejectionWarning: Error: Dice 1 rolled off the table.

(node:17160) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 5)
(node:17160) UnhandledPromiseRejectionWarning: Error: Dice 1 rolled off the table.

(node:17160) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 6)
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (3 ms)
    × should have all TODO comments removed (15 ms)
    √ should use `dices.map()`
    √ should use `Promise.all()` (1 ms)
    × should resolve when all dices settle successfully (4 ms)
    √ should reject with an Error when a dice rolls off the table (36 ms)

  ● ex4-pokerDiceAll › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      113 |
      114 | function checkTodos(source) {
    > 115 |   expect(source.includes('TODO')).toBeFalsy();
          |                                   ^
      116 | }
      117 |
      118 | module.exports = {

      at checkTodos (test-runner/unit-test-helpers.js:115:35)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:36:55)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise
    Received constructor: Array

      55 |
      56 |     const promise = rollTheDices();
    > 57 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      58 |     const result = await promise;
      59 |     expect(Array.isArray(result)).toBe(true);
      60 |     expect(result).toHaveLength(5);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:57:21)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received two assertion calls.

      45 |
      46 |   test('should resolve when all dices settle successfully', async () => {
    > 47 |     expect.assertions(4);
         |            ^
      48 |     expect(exported).toBeDefined();
      49 |
      50 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:47:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 4 passed, 6 total
Snapshots:   0 total
Time:        2.924 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.

2021-11-21 11:15:44 error: *** Spell Checker Report ***


2021-11-21 11:23:53 info: --------------------------------------------
2021-11-21 11:23:53 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2021-11-21 11:23:53 info: --------------------------------------------
2021-11-21 11:23:58 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
(node:19108) UnhandledPromiseRejectionWarning: Error: Dice 1 rolled off the table.

(Use `node --trace-warnings ...` to show where the warning was created)
(node:19108) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 7)
(node:19108) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
(node:19108) UnhandledPromiseRejectionWarning: Error: Dice 2 rolled off the table.

(node:19108) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 8)
(node:19108) UnhandledPromiseRejectionWarning: Error: Dice 3 rolled off the table.

(node:19108) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 9)
(node:19108) UnhandledPromiseRejectionWarning: Error: Dice 4 rolled off the table.

(node:19108) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 10)
(node:19108) UnhandledPromiseRejectionWarning: Error: Dice 5 rolled off the table.

(node:19108) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 11)
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (2 ms)
    × should have all TODO comments removed (13 ms)
    √ should use `dices.map()` (1 ms)
    √ should use `Promise.all()`
    × should resolve when all dices settle successfully (5 ms)
    √ should reject with an Error when a dice rolls off the table (52 ms)

  ● ex4-pokerDiceAll › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      113 |
      114 | function checkTodos(source) {
    > 115 |   expect(source.includes('TODO')).toBeFalsy();
          |                                   ^
      116 | }
      117 |
      118 | module.exports = {

      at checkTodos (test-runner/unit-test-helpers.js:115:35)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:36:55)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise
    Received constructor: Array

      55 |
      56 |     const promise = rollTheDices();
    > 57 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      58 |     const result = await promise;
      59 |     expect(Array.isArray(result)).toBe(true);
      60 |     expect(result).toHaveLength(5);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:57:21)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received two assertion calls.

      45 |
      46 |   test('should resolve when all dices settle successfully', async () => {
    > 47 |     expect.assertions(4);
         |            ^
      48 |     expect(exported).toBeDefined();
      49 |
      50 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:47:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 4 passed, 6 total
Snapshots:   0 total
Time:        3.186 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.

2021-11-21 11:24:01 error: *** Spell Checker Report ***


2021-11-21 11:26:30 info: --------------------------------------------
2021-11-21 11:26:30 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2021-11-21 11:26:30 info: --------------------------------------------
2021-11-21 11:26:35 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
(node:13712) UnhandledPromiseRejectionWarning: Error: Dice 1 rolled off the table.

(Use `node --trace-warnings ...` to show where the warning was created)
(node:13712) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 2)
(node:13712) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
(node:13712) UnhandledPromiseRejectionWarning: Error: Dice 2 rolled off the table.

(node:13712) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 3)
(node:13712) UnhandledPromiseRejectionWarning: Error: Dice 3 rolled off the table.

(node:13712) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 4)
(node:13712) UnhandledPromiseRejectionWarning: Error: Dice 4 rolled off the table.

(node:13712) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 5)
(node:13712) UnhandledPromiseRejectionWarning: Error: Dice 5 rolled off the table.

(node:13712) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 6)
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (3 ms)
    × should have all TODO comments removed (17 ms)
    √ should use `dices.map()`
    √ should use `Promise.all()`
    × should resolve when all dices settle successfully (6 ms)
    √ should reject with an Error when a dice rolls off the table (7 ms)

  ● ex4-pokerDiceAll › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      113 |
      114 | function checkTodos(source) {
    > 115 |   expect(source.includes('TODO')).toBeFalsy();
          |                                   ^
      116 | }
      117 |
      118 | module.exports = {

      at checkTodos (test-runner/unit-test-helpers.js:115:35)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:36:55)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise
    Received constructor: Array

      55 |
      56 |     const promise = rollTheDices();
    > 57 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      58 |     const result = await promise;
      59 |     expect(Array.isArray(result)).toBe(true);
      60 |     expect(result).toHaveLength(5);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:57:21)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received two assertion calls.

      45 |
      46 |   test('should resolve when all dices settle successfully', async () => {
    > 47 |     expect.assertions(4);
         |            ^
      48 |     expect(exported).toBeDefined();
      49 |
      50 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:47:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 4 passed, 6 total
Snapshots:   0 total
Time:        2.688 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.

2021-11-21 11:26:37 error: *** Spell Checker Report ***


2021-11-21 11:27:16 info: --------------------------------------------
2021-11-21 11:27:16 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2021-11-21 11:27:16 info: --------------------------------------------
2021-11-21 11:27:21 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
(node:18332) UnhandledPromiseRejectionWarning: Error: Dice 1 rolled off the table.

(Use `node --trace-warnings ...` to show where the warning was created)
(node:18332) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 2)
(node:18332) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
(node:18332) UnhandledPromiseRejectionWarning: Error: Dice 2 rolled off the table.

(node:18332) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 3)
(node:18332) UnhandledPromiseRejectionWarning: Error: Dice 3 rolled off the table.

(node:18332) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 4)
(node:18332) UnhandledPromiseRejectionWarning: Error: Dice 4 rolled off the table.

(node:18332) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 5)
(node:18332) UnhandledPromiseRejectionWarning: Error: Dice 5 rolled off the table.

(node:18332) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 6)
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (6 ms)
    × should have all TODO comments removed (22 ms)
    √ should use `dices.map()` (1 ms)
    × should use `Promise.all()` (2 ms)
    × should resolve when all dices settle successfully (7 ms)
    √ should reject with an Error when a dice rolls off the table (17 ms)

  ● ex4-pokerDiceAll › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      113 |
      114 | function checkTodos(source) {
    > 115 |   expect(source.includes('TODO')).toBeFalsy();
          |                                   ^
      116 | }
      117 |
      118 | module.exports = {

      at checkTodos (test-runner/unit-test-helpers.js:115:35)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:36:55)

  ● ex4-pokerDiceAll › should use `Promise.all()`

    expect(received).toBeDefined()

    Received: undefined

      41 |
      42 |   test('should use `Promise.all()`', () => {
    > 43 |     expect(state.promiseAll).toBeDefined();
         |                              ^
      44 |   });
      45 |
      46 |   test('should resolve when all dices settle successfully', async () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:43:30)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise
    Received constructor: Array

      55 |
      56 |     const promise = rollTheDices();
    > 57 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      58 |     const result = await promise;
      59 |     expect(Array.isArray(result)).toBe(true);
      60 |     expect(result).toHaveLength(5);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:57:21)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received two assertion calls.

      45 |
      46 |   test('should resolve when all dices settle successfully', async () => {
    > 47 |     expect.assertions(4);
         |            ^
      48 |     expect(exported).toBeDefined();
      49 |
      50 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:47:12)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 3 passed, 6 total
Snapshots:   0 total
Time:        2.961 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.

2021-11-21 11:27:24 error: *** Spell Checker Report ***


2021-11-21 11:30:21 info: --------------------------------------------
2021-11-21 11:30:21 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2021-11-21 11:30:21 info: --------------------------------------------
2021-11-21 11:30:26 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
(node:6744) UnhandledPromiseRejectionWarning: Error: Dice 1 rolled off the table.

(Use `node --trace-warnings ...` to show where the warning was created)
(node:6744) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 2)
(node:6744) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
(node:6744) UnhandledPromiseRejectionWarning: Error: Dice 2 rolled off the table.

(node:6744) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 3)
(node:6744) UnhandledPromiseRejectionWarning: Error: Dice 3 rolled off the table.

(node:6744) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 4)
(node:6744) UnhandledPromiseRejectionWarning: Error: Dice 4 rolled off the table.

(node:6744) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 5)
(node:6744) UnhandledPromiseRejectionWarning: Error: Dice 5 rolled off the table.

(node:6744) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 6)
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (3 ms)
    × should have all TODO comments removed (13 ms)
    √ should use `dices.map()` (1 ms)
    √ should use `Promise.all()` (1 ms)
    × should resolve when all dices settle successfully (6 ms)
    √ should reject with an Error when a dice rolls off the table (15 ms)

  ● ex4-pokerDiceAll › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      113 |
      114 | function checkTodos(source) {
    > 115 |   expect(source.includes('TODO')).toBeFalsy();
          |                                   ^
      116 | }
      117 |
      118 | module.exports = {

      at checkTodos (test-runner/unit-test-helpers.js:115:35)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:36:55)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise
    Received constructor: Array

      55 |
      56 |     const promise = rollTheDices();
    > 57 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      58 |     const result = await promise;
      59 |     expect(Array.isArray(result)).toBe(true);
      60 |     expect(result).toHaveLength(5);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:57:21)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received two assertion calls.

      45 |
      46 |   test('should resolve when all dices settle successfully', async () => {
    > 47 |     expect.assertions(4);
         |            ^
      48 |     expect(exported).toBeDefined();
      49 |
      50 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:47:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 4 passed, 6 total
Snapshots:   0 total
Time:        3.178 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.

2021-11-21 11:30:29 error: *** Spell Checker Report ***


2021-11-21 11:39:37 info: --------------------------------------------
2021-11-21 11:39:37 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2021-11-21 11:39:37 info: --------------------------------------------
2021-11-21 11:39:43 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
(node:7376) UnhandledPromiseRejectionWarning: Error: Dice 1 rolled off the table.

(Use `node --trace-warnings ...` to show where the warning was created)
(node:7376) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 7)
(node:7376) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
(node:7376) UnhandledPromiseRejectionWarning: Error: Dice 2 rolled off the table.

(node:7376) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 8)
(node:7376) UnhandledPromiseRejectionWarning: Error: Dice 3 rolled off the table.

(node:7376) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 9)
(node:7376) UnhandledPromiseRejectionWarning: Error: Dice 4 rolled off the table.

(node:7376) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 10)
(node:7376) UnhandledPromiseRejectionWarning: Error: Dice 5 rolled off the table.

(node:7376) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 11)
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (3 ms)
    × should have all TODO comments removed (12 ms)
    √ should use `dices.map()`
    √ should use `Promise.all()` (1 ms)
    × should resolve when all dices settle successfully (14 ms)
    √ should reject with an Error when a dice rolls off the table (16 ms)

  ● ex4-pokerDiceAll › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      113 |
      114 | function checkTodos(source) {
    > 115 |   expect(source.includes('TODO')).toBeFalsy();
          |                                   ^
      116 | }
      117 |
      118 | module.exports = {

      at checkTodos (test-runner/unit-test-helpers.js:115:35)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:36:55)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise
    Received constructor: Array

      55 |
      56 |     const promise = rollTheDices();
    > 57 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      58 |     const result = await promise;
      59 |     expect(Array.isArray(result)).toBe(true);
      60 |     expect(result).toHaveLength(5);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:57:21)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received two assertion calls.

      45 |
      46 |   test('should resolve when all dices settle successfully', async () => {
    > 47 |     expect.assertions(4);
         |            ^
      48 |     expect(exported).toBeDefined();
      49 |
      50 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:47:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 4 passed, 6 total
Snapshots:   0 total
Time:        3.109 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.

2021-11-21 11:39:46 error: *** Spell Checker Report ***


2021-11-21 11:48:30 info: --------------------------------------------
2021-11-21 11:48:30 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2021-11-21 11:48:30 info: --------------------------------------------
2021-11-21 11:48:35 error: *** Unit Test Error Report ***

  console.log
    Resolved! [ undefined, undefined, undefined, undefined, undefined ]

      at 3-UsingAPIs/Week1/homework/ex4-pokerDiceAll.js:40:30


2021-11-21 11:48:38 error: *** Spell Checker Report ***


2021-11-21 11:49:39 info: --------------------------------------------
2021-11-21 11:49:39 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2021-11-21 11:49:39 info: --------------------------------------------
2021-11-21 11:49:44 error: *** Unit Test Error Report ***

  console.log
    Resolved! [ undefined, undefined, undefined, undefined, undefined ]

      at 3-UsingAPIs/Week1/homework/ex4-pokerDiceAll.js:40:30


2021-11-21 11:49:47 error: *** Spell Checker Report ***


2021-11-21 11:51:23 info: --------------------------------------------
2021-11-21 11:51:23 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2021-11-21 11:51:23 info: --------------------------------------------
2021-11-21 11:51:28 error: *** Unit Test Error Report ***

  console.log
    Resolved! [ undefined, undefined, undefined, undefined, undefined ]

      at 3-UsingAPIs/Week1/homework/ex4-pokerDiceAll.js:40:30


2021-11-21 11:51:31 error: *** Spell Checker Report ***


2021-11-21 11:52:05 info: --------------------------------------------
2021-11-21 11:52:05 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2021-11-21 11:52:05 info: --------------------------------------------
2021-11-21 11:52:11 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
(node:3008) UnhandledPromiseRejectionWarning: Error: Dice 1 rolled off the table.

(Use `node --trace-warnings ...` to show where the warning was created)
(node:3008) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 2)
(node:3008) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
(node:3008) UnhandledPromiseRejectionWarning: Error: Dice 2 rolled off the table.

(node:3008) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 3)
(node:3008) UnhandledPromiseRejectionWarning: Error: Dice 3 rolled off the table.

(node:3008) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 4)
(node:3008) UnhandledPromiseRejectionWarning: Error: Dice 4 rolled off the table.

(node:3008) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 5)
(node:3008) UnhandledPromiseRejectionWarning: Error: Dice 5 rolled off the table.

(node:3008) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 6)
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (3 ms)
    × should have all TODO comments removed (12 ms)
    √ should use `dices.map()`
    √ should use `Promise.all()` (1 ms)
    × should resolve when all dices settle successfully (4 ms)
    √ should reject with an Error when a dice rolls off the table (16 ms)

  ● ex4-pokerDiceAll › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      113 |
      114 | function checkTodos(source) {
    > 115 |   expect(source.includes('TODO')).toBeFalsy();
          |                                   ^
      116 | }
      117 |
      118 | module.exports = {

      at checkTodos (test-runner/unit-test-helpers.js:115:35)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:36:55)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise
    Received constructor: Array

      55 |
      56 |     const promise = rollTheDices();
    > 57 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      58 |     const result = await promise;
      59 |     expect(Array.isArray(result)).toBe(true);
      60 |     expect(result).toHaveLength(5);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:57:21)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received two assertion calls.

      45 |
      46 |   test('should resolve when all dices settle successfully', async () => {
    > 47 |     expect.assertions(4);
         |            ^
      48 |     expect(exported).toBeDefined();
      49 |
      50 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:47:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 4 passed, 6 total
Snapshots:   0 total
Time:        3.026 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.

2021-11-21 11:52:13 error: *** Spell Checker Report ***


2021-11-22 12:17:58 info: --------------------------------------------
2021-11-22 12:17:58 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2021-11-22 12:17:58 info: --------------------------------------------
2021-11-22 12:18:05 error: *** Unit Test Error Report ***

  console.log
    Rejected! object is not iterable (cannot read property Symbol(Symbol.iterator))

      at 3-UsingAPIs/Week1/homework/ex4-pokerDiceAll.js:42:29


2021-11-22 12:18:08 error: *** Spell Checker Report ***


2021-11-22 12:20:52 info: --------------------------------------------
2021-11-22 12:20:52 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2021-11-22 12:20:52 info: --------------------------------------------
2021-11-22 12:20:58 error: *** Unit Test Error Report ***

  console.log
    Resolved! [ undefined, undefined, undefined, undefined, undefined ]

      at 3-UsingAPIs/Week1/homework/ex4-pokerDiceAll.js:43:30


2021-11-22 12:21:00 error: *** Spell Checker Report ***


2021-11-22 12:21:36 info: --------------------------------------------
2021-11-22 12:21:36 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2021-11-22 12:21:36 info: --------------------------------------------
2021-11-22 12:21:41 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
(node:16980) UnhandledPromiseRejectionWarning: Error: Dice 1 rolled off the table.

(Use `node --trace-warnings ...` to show where the warning was created)
(node:16980) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 2)
(node:16980) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
(node:16980) UnhandledPromiseRejectionWarning: Error: Dice 2 rolled off the table.

(node:16980) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 3)
(node:16980) UnhandledPromiseRejectionWarning: Error: Dice 3 rolled off the table.

(node:16980) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 4)
(node:16980) UnhandledPromiseRejectionWarning: Error: Dice 4 rolled off the table.

(node:16980) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 5)
(node:16980) UnhandledPromiseRejectionWarning: Error: Dice 5 rolled off the table.

(node:16980) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 6)
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (2 ms)
    × should have all TODO comments removed (13 ms)
    √ should use `dices.map()`
    √ should use `Promise.all()` (1 ms)
    × should resolve when all dices settle successfully (4 ms)
    √ should reject with an Error when a dice rolls off the table (15 ms)

  ● ex4-pokerDiceAll › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      113 |
      114 | function checkTodos(source) {
    > 115 |   expect(source.includes('TODO')).toBeFalsy();
          |                                   ^
      116 | }
      117 |
      118 | module.exports = {

      at checkTodos (test-runner/unit-test-helpers.js:115:35)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:36:55)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise
    Received constructor: Array

      55 |
      56 |     const promise = rollTheDices();
    > 57 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      58 |     const result = await promise;
      59 |     expect(Array.isArray(result)).toBe(true);
      60 |     expect(result).toHaveLength(5);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:57:21)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received two assertion calls.

      45 |
      46 |   test('should resolve when all dices settle successfully', async () => {
    > 47 |     expect.assertions(4);
         |            ^
      48 |     expect(exported).toBeDefined();
      49 |
      50 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:47:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 4 passed, 6 total
Snapshots:   0 total
Time:        3.131 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.

2021-11-22 12:21:44 error: *** Spell Checker Report ***


2021-11-22 12:22:11 info: --------------------------------------------
2021-11-22 12:22:11 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2021-11-22 12:22:11 info: --------------------------------------------
2021-11-22 12:22:17 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
(node:14200) UnhandledPromiseRejectionWarning: Error: Dice 1 rolled off the table.

(Use `node --trace-warnings ...` to show where the warning was created)
(node:14200) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 2)
(node:14200) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
(node:14200) UnhandledPromiseRejectionWarning: Error: Dice 2 rolled off the table.

(node:14200) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 3)
(node:14200) UnhandledPromiseRejectionWarning: Error: Dice 3 rolled off the table.

(node:14200) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 4)
(node:14200) UnhandledPromiseRejectionWarning: Error: Dice 4 rolled off the table.

(node:14200) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 5)
(node:14200) UnhandledPromiseRejectionWarning: Error: Dice 5 rolled off the table.

(node:14200) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 6)
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (3 ms)
    × should have all TODO comments removed (12 ms)
    √ should use `dices.map()` (1 ms)
    √ should use `Promise.all()`
    × should resolve when all dices settle successfully (4 ms)
    √ should reject with an Error when a dice rolls off the table (19 ms)

  ● ex4-pokerDiceAll › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      113 |
      114 | function checkTodos(source) {
    > 115 |   expect(source.includes('TODO')).toBeFalsy();
          |                                   ^
      116 | }
      117 |
      118 | module.exports = {

      at checkTodos (test-runner/unit-test-helpers.js:115:35)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:36:55)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise
    Received constructor: Array

      55 |
      56 |     const promise = rollTheDices();
    > 57 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      58 |     const result = await promise;
      59 |     expect(Array.isArray(result)).toBe(true);
      60 |     expect(result).toHaveLength(5);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:57:21)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received two assertion calls.

      45 |
      46 |   test('should resolve when all dices settle successfully', async () => {
    > 47 |     expect.assertions(4);
         |            ^
      48 |     expect(exported).toBeDefined();
      49 |
      50 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:47:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 4 passed, 6 total
Snapshots:   0 total
Time:        3.456 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.

2021-11-22 12:22:20 error: *** Spell Checker Report ***


2021-11-22 12:24:17 info: --------------------------------------------
2021-11-22 12:24:17 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2021-11-22 12:24:17 info: --------------------------------------------
2021-11-22 12:24:22 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
(node:14016) UnhandledPromiseRejectionWarning: Error: Dice 1 rolled off the table.

(Use `node --trace-warnings ...` to show where the warning was created)
(node:14016) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 2)
(node:14016) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
(node:14016) UnhandledPromiseRejectionWarning: Error: Dice 2 rolled off the table.

(node:14016) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 3)
(node:14016) UnhandledPromiseRejectionWarning: Error: Dice 3 rolled off the table.

(node:14016) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 4)
(node:14016) UnhandledPromiseRejectionWarning: Error: Dice 4 rolled off the table.

(node:14016) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 5)
(node:14016) UnhandledPromiseRejectionWarning: Error: Dice 5 rolled off the table.

(node:14016) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 6)
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (4 ms)
    × should have all TODO comments removed (15 ms)
    √ should use `dices.map()`
    √ should use `Promise.all()` (1 ms)
    × should resolve when all dices settle successfully (4 ms)
    √ should reject with an Error when a dice rolls off the table (15 ms)

  ● ex4-pokerDiceAll › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      113 |
      114 | function checkTodos(source) {
    > 115 |   expect(source.includes('TODO')).toBeFalsy();
          |                                   ^
      116 | }
      117 |
      118 | module.exports = {

      at checkTodos (test-runner/unit-test-helpers.js:115:35)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:36:55)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise
    Received constructor: Array

      55 |
      56 |     const promise = rollTheDices();
    > 57 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      58 |     const result = await promise;
      59 |     expect(Array.isArray(result)).toBe(true);
      60 |     expect(result).toHaveLength(5);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:57:21)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received two assertion calls.

      45 |
      46 |   test('should resolve when all dices settle successfully', async () => {
    > 47 |     expect.assertions(4);
         |            ^
      48 |     expect(exported).toBeDefined();
      49 |
      50 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:47:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 4 passed, 6 total
Snapshots:   0 total
Time:        3.165 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.

2021-11-22 12:24:25 error: *** Spell Checker Report ***


2021-11-22 12:33:04 info: --------------------------------------------
2021-11-22 12:33:04 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2021-11-22 12:33:04 info: --------------------------------------------
2021-11-22 12:33:10 error: *** Unit Test Error Report ***

  console.log
    Resolved! [ undefined, undefined, undefined, undefined, undefined ]

      at 3-UsingAPIs/Week1/homework/ex4-pokerDiceAll.js:46:13


2021-11-22 12:33:12 error: *** Spell Checker Report ***


2021-11-22 12:43:16 info: --------------------------------------------
2021-11-22 12:43:16 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2021-11-22 12:43:16 info: --------------------------------------------
2021-11-22 12:43:21 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    × should exist and be executable (5 ms)
    × should have all TODO comments removed (11 ms)
    √ should use `dices.map()` (1 ms)
    √ should use `Promise.all()`
    × should resolve when all dices settle successfully (3 ms)
    × should reject with an Error when a dice rolls off the table (11 ms)

  ● ex4-pokerDiceAll › should exist and be executable

    expect(received).toBeDefined()

    Received: undefined

      31 |
      32 |   test('should exist and be executable', () => {
    > 33 |     expect(exported).toBeDefined();
         |                      ^
      34 |   });
      35 |
      36 |   test('should have all TODO comments removed', () => checkTodos(source));

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:33:22)

  ● ex4-pokerDiceAll › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      113 |
      114 | function checkTodos(source) {
    > 115 |   expect(source.includes('TODO')).toBeFalsy();
          |                                   ^
      116 | }
      117 |
      118 | module.exports = {

      at checkTodos (test-runner/unit-test-helpers.js:115:35)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:36:55)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect(received).toBeDefined()

    Received: undefined

      46 |   test('should resolve when all dices settle successfully', async () => {
      47 |     expect.assertions(4);
    > 48 |     expect(exported).toBeDefined();
         |                      ^
      49 |
      50 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();
      51 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:48:22)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received one assertion call.

      45 |
      46 |   test('should resolve when all dices settle successfully', async () => {
    > 47 |     expect.assertions(4);
         |            ^
      48 |     expect(exported).toBeDefined();
      49 |
      50 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:47:12)

  ● ex4-pokerDiceAll › should reject with an Error when a dice rolls off the table

    expect(received).toBeDefined()

    Received: undefined

      69 |   test('should reject with an Error when a dice rolls off the table', async () => {
      70 |     expect.assertions(3);
    > 71 |     expect(exported).toBeDefined();
         |                      ^
      72 |
      73 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();
      74 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0.999);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:71:22)

  ● ex4-pokerDiceAll › should reject with an Error when a dice rolls off the table

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      68 |
      69 |   test('should reject with an Error when a dice rolls off the table', async () => {
    > 70 |     expect.assertions(3);
         |            ^
      71 |     expect(exported).toBeDefined();
      72 |
      73 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:70:12)

Test Suites: 1 failed, 1 total
Tests:       4 failed, 2 passed, 6 total
Snapshots:   0 total
Time:        3.021 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.

2021-11-22 12:43:24 error: *** Spell Checker Report ***


2021-11-22 02:09:52 info: --------------------------------------------
2021-11-22 02:09:52 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2021-11-22 02:09:52 info: --------------------------------------------
2021-11-22 02:09:59 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    × should exist and be executable (5 ms)
    × should have all TODO comments removed (11 ms)
    √ should use `dices.map()` (1 ms)
    × should use `Promise.all()` (1 ms)
    × should resolve when all dices settle successfully (2 ms)
    × should reject with an Error when a dice rolls off the table (1 ms)

  ● ex4-pokerDiceAll › should exist and be executable

    expect(received).toBeDefined()

    Received: undefined

      31 |
      32 |   test('should exist and be executable', () => {
    > 33 |     expect(exported).toBeDefined();
         |                      ^
      34 |   });
      35 |
      36 |   test('should have all TODO comments removed', () => checkTodos(source));

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:33:22)

  ● ex4-pokerDiceAll › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      113 |
      114 | function checkTodos(source) {
    > 115 |   expect(source.includes('TODO')).toBeFalsy();
          |                                   ^
      116 | }
      117 |
      118 | module.exports = {

      at checkTodos (test-runner/unit-test-helpers.js:115:35)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:36:55)

  ● ex4-pokerDiceAll › should use `Promise.all()`

    expect(received).toBeDefined()

    Received: undefined

      41 |
      42 |   test('should use `Promise.all()`', () => {
    > 43 |     expect(state.promiseAll).toBeDefined();
         |                              ^
      44 |   });
      45 |
      46 |   test('should resolve when all dices settle successfully', async () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:43:30)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect(received).toBeDefined()

    Received: undefined

      46 |   test('should resolve when all dices settle successfully', async () => {
      47 |     expect.assertions(4);
    > 48 |     expect(exported).toBeDefined();
         |                      ^
      49 |
      50 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();
      51 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:48:22)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received one assertion call.

      45 |
      46 |   test('should resolve when all dices settle successfully', async () => {
    > 47 |     expect.assertions(4);
         |            ^
      48 |     expect(exported).toBeDefined();
      49 |
      50 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:47:12)

  ● ex4-pokerDiceAll › should reject with an Error when a dice rolls off the table

    expect(received).toBeDefined()

    Received: undefined

      69 |   test('should reject with an Error when a dice rolls off the table', async () => {
      70 |     expect.assertions(3);
    > 71 |     expect(exported).toBeDefined();
         |                      ^
      72 |
      73 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();
      74 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0.999);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:71:22)

  ● ex4-pokerDiceAll › should reject with an Error when a dice rolls off the table

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      68 |
      69 |   test('should reject with an Error when a dice rolls off the table', async () => {
    > 70 |     expect.assertions(3);
         |            ^
      71 |     expect(exported).toBeDefined();
      72 |
      73 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:70:12)

Test Suites: 1 failed, 1 total
Tests:       5 failed, 1 passed, 6 total
Snapshots:   0 total
Time:        4.089 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.

2021-11-22 02:10:03 error: *** Spell Checker Report ***


2021-11-22 02:10:35 info: --------------------------------------------
2021-11-22 02:10:35 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2021-11-22 02:10:35 info: --------------------------------------------
2021-11-22 02:10:40 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
(node:6156) UnhandledPromiseRejectionWarning: Error: Dice 1 rolled off the table.

(Use `node --trace-warnings ...` to show where the warning was created)
(node:6156) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 2)
(node:6156) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
(node:6156) UnhandledPromiseRejectionWarning: Error: Dice 2 rolled off the table.

(node:6156) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 3)
(node:6156) UnhandledPromiseRejectionWarning: Error: Dice 3 rolled off the table.

(node:6156) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 4)
(node:6156) UnhandledPromiseRejectionWarning: Error: Dice 4 rolled off the table.

(node:6156) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 5)
(node:6156) UnhandledPromiseRejectionWarning: Error: Dice 5 rolled off the table.

(node:6156) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 6)
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (3 ms)
    × should have all TODO comments removed (12 ms)
    √ should use `dices.map()` (1 ms)
    √ should use `Promise.all()`
    × should resolve when all dices settle successfully (4 ms)
    √ should reject with an Error when a dice rolls off the table (14 ms)

  ● ex4-pokerDiceAll › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      113 |
      114 | function checkTodos(source) {
    > 115 |   expect(source.includes('TODO')).toBeFalsy();
          |                                   ^
      116 | }
      117 |
      118 | module.exports = {

      at checkTodos (test-runner/unit-test-helpers.js:115:35)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:36:55)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise
    Received constructor: Array

      55 |
      56 |     const promise = rollTheDices();
    > 57 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      58 |     const result = await promise;
      59 |     expect(Array.isArray(result)).toBe(true);
      60 |     expect(result).toHaveLength(5);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:57:21)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received two assertion calls.

      45 |
      46 |   test('should resolve when all dices settle successfully', async () => {
    > 47 |     expect.assertions(4);
         |            ^
      48 |     expect(exported).toBeDefined();
      49 |
      50 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:47:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 4 passed, 6 total
Snapshots:   0 total
Time:        3.108 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.

2021-11-22 02:10:43 error: *** Spell Checker Report ***


2021-11-22 02:11:09 info: --------------------------------------------
2021-11-22 02:11:09 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2021-11-22 02:11:09 info: --------------------------------------------
2021-11-22 02:11:14 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
(node:20224) UnhandledPromiseRejectionWarning: Error: Dice 1 rolled off the table.

(Use `node --trace-warnings ...` to show where the warning was created)
(node:20224) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 2)
(node:20224) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
(node:20224) UnhandledPromiseRejectionWarning: Error: Dice 2 rolled off the table.

(node:20224) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 3)
(node:20224) UnhandledPromiseRejectionWarning: Error: Dice 3 rolled off the table.

(node:20224) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 4)
(node:20224) UnhandledPromiseRejectionWarning: Error: Dice 4 rolled off the table.

(node:20224) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 5)
(node:20224) UnhandledPromiseRejectionWarning: Error: Dice 5 rolled off the table.

(node:20224) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 6)
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (3 ms)
    √ should have all TODO comments removed
    √ should use `dices.map()` (1 ms)
    √ should use `Promise.all()`
    × should resolve when all dices settle successfully (6 ms)
    √ should reject with an Error when a dice rolls off the table (13 ms)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise
    Received constructor: Array

      55 |
      56 |     const promise = rollTheDices();
    > 57 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      58 |     const result = await promise;
      59 |     expect(Array.isArray(result)).toBe(true);
      60 |     expect(result).toHaveLength(5);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:57:21)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received two assertion calls.

      45 |
      46 |   test('should resolve when all dices settle successfully', async () => {
    > 47 |     expect.assertions(4);
         |            ^
      48 |     expect(exported).toBeDefined();
      49 |
      50 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:47:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 5 passed, 6 total
Snapshots:   0 total
Time:        2.887 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.

2021-11-22 02:11:17 error: *** Spell Checker Report ***


2021-11-22 02:49:02 info: --------------------------------------------
2021-11-22 02:49:02 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2021-11-22 02:49:02 info: --------------------------------------------
2021-11-22 02:49:07 error: *** Unit Test Error Report ***

  console.log
    Rejected! object is not iterable (cannot read property Symbol(Symbol.iterator))

      at 3-UsingAPIs/Week1/homework/ex4-pokerDiceAll.js:44:13


2021-11-22 02:49:10 error: *** Spell Checker Report ***


2021-11-22 02:52:13 info: --------------------------------------------
2021-11-22 02:52:13 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2021-11-22 02:52:13 info: --------------------------------------------
2021-11-22 02:52:18 error: *** Unit Test Error Report ***

  console.log
    Rejected! object is not iterable (cannot read property Symbol(Symbol.iterator))

      at 3-UsingAPIs/Week1/homework/ex4-pokerDiceAll.js:44:13


2021-11-22 02:52:21 error: *** Spell Checker Report ***


2021-11-22 02:52:57 info: --------------------------------------------
2021-11-22 02:52:57 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2021-11-22 02:52:57 info: --------------------------------------------
2021-11-22 02:53:03 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
(node:14220) UnhandledPromiseRejectionWarning: TypeError: object is not iterable (cannot read property Symbol(Symbol.iterator))
(Use `node --trace-warnings ...` to show where the warning was created)
(node:14220) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 2)
(node:14220) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
(node:14220) UnhandledPromiseRejectionWarning: Error: Dice 1 rolled off the table.

(node:14220) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 3)
(node:14220) UnhandledPromiseRejectionWarning: Error: Dice 2 rolled off the table.

(node:14220) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 4)
(node:14220) UnhandledPromiseRejectionWarning: Error: Dice 3 rolled off the table.

(node:14220) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 5)
(node:14220) UnhandledPromiseRejectionWarning: Error: Dice 4 rolled off the table.

(node:14220) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 6)
(node:14220) UnhandledPromiseRejectionWarning: Error: Dice 5 rolled off the table.

(node:14220) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 7)
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (3 ms)
    √ should have all TODO comments removed (1 ms)
    √ should use `dices.map()`
    √ should use `Promise.all()` (1 ms)
    √ should resolve when all dices settle successfully (3 ms)
    × should reject with an Error when a dice rolls off the table (6 ms)

  ● ex4-pokerDiceAll › should reject with an Error when a dice rolls off the table

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      68 |
      69 |   test('should reject with an Error when a dice rolls off the table', async () => {
    > 70 |     expect.assertions(3);
         |            ^
      71 |     expect(exported).toBeDefined();
      72 |
      73 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:70:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 5 passed, 6 total
Snapshots:   0 total
Time:        3.161 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.

2021-11-22 02:53:05 error: *** Spell Checker Report ***


2021-11-22 04:41:22 info: --------------------------------------------
2021-11-22 04:41:22 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2021-11-22 04:41:22 info: --------------------------------------------
2021-11-22 04:41:30 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    × should exist and be executable (6 ms)
    √ should have all TODO comments removed (1 ms)
    × should use `dices.map()` (1 ms)
    × should use `Promise.all()` (1 ms)
    × should resolve when all dices settle successfully (3 ms)
    × should reject with an Error when a dice rolls off the table (1 ms)

  ● ex4-pokerDiceAll › should exist and be executable

    expect(received).toBeDefined()

    Received: undefined

      31 |
      32 |   test('should exist and be executable', () => {
    > 33 |     expect(exported).toBeDefined();
         |                      ^
      34 |   });
      35 |
      36 |   test('should have all TODO comments removed', () => checkTodos(source));

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:33:22)

  ● ex4-pokerDiceAll › should use `dices.map()`

    expect(received).toBeDefined()

    Received: undefined

      37 |
      38 |   test('should use `dices.map()`', () => {
    > 39 |     expect(state.dicesMap).toBeDefined();
         |                            ^
      40 |   });
      41 |
      42 |   test('should use `Promise.all()`', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:39:28)

  ● ex4-pokerDiceAll › should use `Promise.all()`

    expect(received).toBeDefined()

    Received: undefined

      41 |
      42 |   test('should use `Promise.all()`', () => {
    > 43 |     expect(state.promiseAll).toBeDefined();
         |                              ^
      44 |   });
      45 |
      46 |   test('should resolve when all dices settle successfully', async () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:43:30)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect(received).toBeDefined()

    Received: undefined

      46 |   test('should resolve when all dices settle successfully', async () => {
      47 |     expect.assertions(4);
    > 48 |     expect(exported).toBeDefined();
         |                      ^
      49 |
      50 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();
      51 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:48:22)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received one assertion call.

      45 |
      46 |   test('should resolve when all dices settle successfully', async () => {
    > 47 |     expect.assertions(4);
         |            ^
      48 |     expect(exported).toBeDefined();
      49 |
      50 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:47:12)

  ● ex4-pokerDiceAll › should reject with an Error when a dice rolls off the table

    expect(received).toBeDefined()

    Received: undefined

      69 |   test('should reject with an Error when a dice rolls off the table', async () => {
      70 |     expect.assertions(3);
    > 71 |     expect(exported).toBeDefined();
         |                      ^
      72 |
      73 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();
      74 |     const randomSpy = jest.spyOn(Math, 'random').mockReturnValue(0.999);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:71:22)

  ● ex4-pokerDiceAll › should reject with an Error when a dice rolls off the table

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      68 |
      69 |   test('should reject with an Error when a dice rolls off the table', async () => {
    > 70 |     expect.assertions(3);
         |            ^
      71 |     expect(exported).toBeDefined();
      72 |
      73 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:70:12)

Test Suites: 1 failed, 1 total
Tests:       5 failed, 1 passed, 6 total
Snapshots:   0 total
Time:        4.192 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.

2021-11-22 04:41:33 error: *** Spell Checker Report ***


2021-11-22 04:42:03 info: --------------------------------------------
2021-11-22 04:42:03 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2021-11-22 04:42:03 info: --------------------------------------------
2021-11-22 04:42:09 error: *** Unit Test Error Report ***

  console.log
    Resolved! [ undefined, undefined, undefined, undefined, undefined ]

      at 3-UsingAPIs/Week1/homework/ex4-pokerDiceAll.js:39:13


2021-11-22 04:42:11 error: *** Spell Checker Report ***


2021-11-22 04:42:33 info: --------------------------------------------
2021-11-22 04:42:33 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2021-11-22 04:42:33 info: --------------------------------------------
2021-11-22 04:42:38 error: *** Unit Test Error Report ***

  console.log
    Resolved! [ undefined, undefined, undefined, undefined, undefined ]

      at 3-UsingAPIs/Week1/homework/ex4-pokerDiceAll.js:39:13


2021-11-22 04:42:41 error: *** Spell Checker Report ***


2021-11-22 04:46:30 info: --------------------------------------------
2021-11-22 04:46:30 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2021-11-22 04:46:30 info: --------------------------------------------
2021-11-22 04:46:36 error: *** Unit Test Error Report ***

  console.log
    Rejected! object is not iterable (cannot read property Symbol(Symbol.iterator))

      at 3-UsingAPIs/Week1/homework/ex4-pokerDiceAll.js:44:13


2021-11-22 04:46:38 error: *** Spell Checker Report ***


2021-11-22 04:49:06 info: --------------------------------------------
2021-11-22 04:49:06 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2021-11-22 04:49:06 info: --------------------------------------------
2021-11-22 04:49:15 error: *** Unit Test Error Report ***

  console.log
    Rejected! object is not iterable (cannot read property Symbol(Symbol.iterator))

      at 3-UsingAPIs/Week1/homework/ex4-pokerDiceAll.js:44:13


2021-11-22 04:49:20 error: *** Spell Checker Report ***


2021-11-22 04:53:24 info: --------------------------------------------
2021-11-22 04:53:24 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2021-11-22 04:53:24 info: --------------------------------------------
2021-11-22 04:53:32 error: *** Unit Test Error Report ***

  console.log
    Rejected! object is not iterable (cannot read property Symbol(Symbol.iterator))

      at 3-UsingAPIs/Week1/homework/ex4-pokerDiceAll.js:44:13


2021-11-22 04:53:37 error: *** Spell Checker Report ***


2021-11-22 04:58:17 info: --------------------------------------------
2021-11-22 04:58:17 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2021-11-22 04:58:17 info: --------------------------------------------
2021-11-22 04:58:32 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
(node:10008) UnhandledPromiseRejectionWarning: Error: Dice 1 rolled off the table.

(Use `node --trace-warnings ...` to show where the warning was created)
(node:10008) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 2)
(node:10008) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
(node:10008) UnhandledPromiseRejectionWarning: Error: Dice 2 rolled off the table.

(node:10008) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 3)
(node:10008) UnhandledPromiseRejectionWarning: Error: Dice 3 rolled off the table.

(node:10008) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 4)
(node:10008) UnhandledPromiseRejectionWarning: Error: Dice 4 rolled off the table.

(node:10008) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 5)
(node:10008) UnhandledPromiseRejectionWarning: Error: Dice 5 rolled off the table.

(node:10008) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 6)
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (4 ms)
    √ should have all TODO comments removed (1 ms)
    √ should use `dices.map()`
    √ should use `Promise.all()` (1 ms)
    × should resolve when all dices settle successfully (12 ms)
    √ should reject with an Error when a dice rolls off the table (11 ms)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise
    Received constructor: Array

      55 |
      56 |     const promise = rollTheDices();
    > 57 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      58 |     const result = await promise;
      59 |     expect(Array.isArray(result)).toBe(true);
      60 |     expect(result).toHaveLength(5);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:57:21)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received two assertion calls.

      45 |
      46 |   test('should resolve when all dices settle successfully', async () => {
    > 47 |     expect.assertions(4);
         |            ^
      48 |     expect(exported).toBeDefined();
      49 |
      50 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:47:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 5 passed, 6 total
Snapshots:   0 total
Time:        10.663 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.

2021-11-22 04:58:38 error: *** Spell Checker Report ***


2021-11-22 05:15:03 info: --------------------------------------------
2021-11-22 05:15:03 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2021-11-22 05:15:03 info: --------------------------------------------
2021-11-22 05:15:08 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
(node:16824) UnhandledPromiseRejectionWarning: Error: Dice 1 rolled off the table.

(Use `node --trace-warnings ...` to show where the warning was created)
(node:16824) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 2)
(node:16824) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
(node:16824) UnhandledPromiseRejectionWarning: Error: Dice 2 rolled off the table.

(node:16824) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 3)
(node:16824) UnhandledPromiseRejectionWarning: Error: Dice 3 rolled off the table.

(node:16824) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 4)
(node:16824) UnhandledPromiseRejectionWarning: Error: Dice 4 rolled off the table.

(node:16824) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 5)
(node:16824) UnhandledPromiseRejectionWarning: Error: Dice 5 rolled off the table.

(node:16824) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 6)
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (2 ms)
    √ should have all TODO comments removed
    √ should use `dices.map()` (1 ms)
    √ should use `Promise.all()`
    × should resolve when all dices settle successfully (6 ms)
    √ should reject with an Error when a dice rolls off the table (4 ms)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise
    Received constructor: Array

      55 |
      56 |     const promise = rollTheDices();
    > 57 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      58 |     const result = await promise;
      59 |     expect(Array.isArray(result)).toBe(true);
      60 |     expect(result).toHaveLength(5);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:57:21)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received two assertion calls.

      45 |
      46 |   test('should resolve when all dices settle successfully', async () => {
    > 47 |     expect.assertions(4);
         |            ^
      48 |     expect(exported).toBeDefined();
      49 |
      50 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:47:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 5 passed, 6 total
Snapshots:   0 total
Time:        3.086 s, estimated 5 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.

2021-11-22 05:15:11 error: *** Spell Checker Report ***


2021-11-22 05:25:03 info: ----------------------------------------------
2021-11-22 05:25:03 info: >>> Running Unit Test `ex5-pokerDiceChain` <<<
2021-11-22 05:25:03 info: ----------------------------------------------
2021-11-22 05:25:09 error: *** Unit Test Error Report ***

Command failed: npx jest ex5-pokerDiceChain.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex5-pokerDiceChain.test.js
  ex5-pokerDiceChain
    √ should exist and be executable (3 ms)
    × should have all TODO comments removed (16 ms)
    √ should resolve when all dices settle successfully (4 ms)
    √ should reject with an Error when a dice rolls off the table (2 ms)

  ● ex5-pokerDiceChain › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      113 |
      114 | function checkTodos(source) {
    > 115 |   expect(source.includes('TODO')).toBeFalsy();
          |                                   ^
      116 | }
      117 |
      118 | module.exports = {

      at checkTodos (test-runner/unit-test-helpers.js:115:35)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex5-pokerDiceChain.test.js:19:55)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 3 passed, 4 total
Snapshots:   0 total
Time:        3.299 s
Ran all test suites matching /ex5-pokerDiceChain.test.js/i.

2021-11-22 05:25:12 error: *** Spell Checker Report ***


2021-11-22 05:25:35 info: ----------------------------------------------
2021-11-22 05:25:35 info: >>> Running Unit Test `ex5-pokerDiceChain` <<<
2021-11-22 05:25:35 info: ----------------------------------------------
2021-11-22 05:25:40 info: All unit tests passed.
2021-11-22 05:25:43 error: *** Spell Checker Report ***


2021-11-22 06:56:43 info: ---------------------------------------
2021-11-22 06:56:43 info: >>> Running Unit Test `ex1-johnWho` <<<
2021-11-22 06:56:43 info: ---------------------------------------
2021-11-22 06:56:54 info: All unit tests passed.
2021-11-22 06:57:00 error: *** Spell Checker Report ***


2021-11-22 07:07:34 info: ---------------------------------------
2021-11-22 07:07:34 info: >>> Running Unit Test `ex1-johnWho` <<<
2021-11-22 07:07:34 info: ---------------------------------------
2021-11-22 07:07:48 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js (5.059 s)
  getAnonName
    √ should exist and be executable (8 ms)
    √ should have all TODO comments removed (2 ms)
    √ should call `new Promise()` (1 ms)
    √ should take a single argument (2 ms)
    √ `resolve()` should be called with a one argument (1 ms)
    √ `reject()` should be called with a one argument (1 ms)
    × should resolve when called with a string argument (991 ms)
    × should reject with an Error object when called without an argument (1004 ms)

  ● getAnonName › should resolve when called with a string argument

    ReferenceError: error is not defined

      28 |   })
      29 |   .catch((rejected) => {
    > 30 |     console.log(error);
         |                 ^
      31 |   });
      32 |
      33 | // ! Do not change or remove the code below

      at 3-UsingAPIs/Week1/homework/ex1-johnWho.js:30:17

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      65 |
      66 |   test('should resolve when called with a string argument', () => {
    > 67 |     expect.assertions(3);
         |            ^
      68 |     expect(exported).toBeDefined();
      69 |     const promise = getAnonName('John');
      70 |     expect(promise).toBeInstanceOf(Promise);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:67:12)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received four assertion calls.

      73 |
      74 |   test('should reject with an Error object when called without an argument', () => {
    > 75 |     expect.assertions(3);
         |            ^
      76 |     expect(exported).toBeDefined();
      77 |     const promise = getAnonName();
      78 |     expect(promise).toBeInstanceOf(Promise);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:75:12)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 6 passed, 8 total
Snapshots:   0 total
Time:        8.321 s
Ran all test suites matching /ex1-johnWho.test.js/i.

2021-11-22 07:07:54 error: *** Spell Checker Report ***


2021-11-22 07:08:30 info: ---------------------------------------
2021-11-22 07:08:30 info: >>> Running Unit Test `ex1-johnWho` <<<
2021-11-22 07:08:30 info: ---------------------------------------
2021-11-22 07:08:42 info: All unit tests passed.
2021-11-22 07:08:48 error: *** Spell Checker Report ***


2021-11-22 07:09:16 info: ---------------------------------------
2021-11-22 07:09:16 info: >>> Running Unit Test `ex1-johnWho` <<<
2021-11-22 07:09:16 info: ---------------------------------------
2021-11-22 07:09:28 info: All unit tests passed.
2021-11-22 07:09:34 error: *** Spell Checker Report ***


2021-11-22 07:15:21 info: --------------------------------------------
2021-11-22 07:15:21 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2021-11-22 07:15:21 info: --------------------------------------------
2021-11-22 07:15:31 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-pokerDiceAll.test.js --colors
(node:17292) UnhandledPromiseRejectionWarning: Error: Dice 1 rolled off the table.

(Use `node --trace-warnings ...` to show where the warning was created)
(node:17292) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 2)
(node:17292) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
(node:17292) UnhandledPromiseRejectionWarning: Error: Dice 2 rolled off the table.

(node:17292) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 3)
(node:17292) UnhandledPromiseRejectionWarning: Error: Dice 3 rolled off the table.

(node:17292) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 4)
(node:17292) UnhandledPromiseRejectionWarning: Error: Dice 4 rolled off the table.

(node:17292) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 5)
(node:17292) UnhandledPromiseRejectionWarning: Error: Dice 5 rolled off the table.

(node:17292) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 6)
 FAIL  3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js
  ex4-pokerDiceAll
    √ should exist and be executable (6 ms)
    √ should have all TODO comments removed (1 ms)
    √ should use `dices.map()` (1 ms)
    √ should use `Promise.all()` (1 ms)
    × should resolve when all dices settle successfully (11 ms)
    √ should reject with an Error when a dice rolls off the table (32 ms)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise
    Received constructor: Array

      55 |
      56 |     const promise = rollTheDices();
    > 57 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      58 |     const result = await promise;
      59 |     expect(Array.isArray(result)).toBe(true);
      60 |     expect(result).toHaveLength(5);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:57:21)

  ● ex4-pokerDiceAll › should resolve when all dices settle successfully

    expect.assertions(4)

    Expected four assertions to be called but received two assertion calls.

      45 |
      46 |   test('should resolve when all dices settle successfully', async () => {
    > 47 |     expect.assertions(4);
         |            ^
      48 |     expect(exported).toBeDefined();
      49 |
      50 |     const logSpy = jest.spyOn(console, 'log').mockImplementation();

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex4-pokerDiceAll.test.js:47:12)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 5 passed, 6 total
Snapshots:   0 total
Time:        5.274 s
Ran all test suites matching /ex4-pokerDiceAll.test.js/i.

2021-11-22 07:15:36 error: *** Spell Checker Report ***


2021-11-23 02:03:33 info: --------------------------------------------
2021-11-23 02:03:33 info: >>> Running Unit Test `ex4-pokerDiceAll` <<<
2021-11-23 02:03:33 info: --------------------------------------------
2021-11-23 02:03:40 error: *** Unit Test Error Report ***

  console.log
    Resolved! [ undefined, undefined, undefined, undefined, undefined ]

      at 3-UsingAPIs/Week1/homework/ex4-pokerDiceAll.js:41:13


2021-11-23 02:03:43 error: *** Spell Checker Report ***


